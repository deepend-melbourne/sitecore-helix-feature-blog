@using Glass.Mapper.Sc.Web.Mvc
@using Sitecore.Feature.Blog.Models
@using System.Collections.Generic
@using Sitecore.Foundation.Grid.Models
@using Sitecore.Foundation.Alerts.Models
@using Sitecore.Foundation.Alerts.Extensions
@using Sitecore.Foundation.Indexing.Search.Models
@using System.Linq

@inherits GlassView<SearchResponse<IBlogArticle>>

@if (!Model.Results.Any() && Sitecore.Context.PageMode.IsExperienceEditor)
{
    var warningModel = new RenderingAlertModel()
    {
        Title = "Blog Listing (No articles)",
        Description = "There are no articles to display. When you view this rendering in the experience editor, outside the context of a site, no articles will display. This message will not display when viewed normally."
    };
    <div class="grid-container">

        <div class="grid-x grid-padding-x">
            <div class="cell">
                @Html.ShowRenderingAlert(warningModel)
            </div>
        </div>
    </div>

    return;
}

<div class="latest-news">
    <div class="grid-x grid-padding-x">

        @foreach (var blog in Model.Results)
        {
            if (blog == null)
            {
                continue;
            }

          @Html.Partial("~/Views/Feature/Blog/BlogListing.cshtml", blog)
        }
    </div>
    <ul class="pagination">
        @foreach (var page in Enumerable.Range(1, Model.TotalPages))
        {
            var isCurrent = page == Model.Page;
            <li class="@(isCurrent ? "current" : string.Empty)">
                @if (!isCurrent)
                {
                    <a href="?page=@page">@page</a>
                }
                else
                {
                    <span>@page</span>
                }
            </li>
        }
    </ul>
</div>
